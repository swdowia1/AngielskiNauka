// <auto-generated />
using System;
using AngielskiNauka.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AngielskiNauka.Migrations
{
    [DbContext(typeof(AaaswswContext))]
    [Migration("20250327070347_zadania2")]
    partial class zadania2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AngielskiNauka.Models.Dane", b =>
                {
                    b.Property<int>("DaneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DaneId"));

                    b.Property<string>("Ang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Pol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PoziomId")
                        .HasColumnType("int");

                    b.Property<int>("Stan")
                        .HasColumnType("int");

                    b.HasKey("DaneId");

                    b.HasIndex(new[] { "PoziomId" }, "IX_Danes_PoziomId");

                    b.ToTable("Danes");
                });

            modelBuilder.Entity("AngielskiNauka.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("AngielskiNauka.Models.JobTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("JobTimes");
                });

            modelBuilder.Entity("AngielskiNauka.Models.Poziom", b =>
                {
                    b.Property<int>("PoziomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PoziomId"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PoziomId");

                    b.ToTable("Pozioms");
                });

            modelBuilder.Entity("AngielskiNauka.Models.Stat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ilosc")
                        .HasColumnType("int");

                    b.Property<int>("PoziomId")
                        .HasColumnType("int");

                    b.Property<string>("Repeat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "PoziomId" }, "IX_Stats_PoziomId");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("AngielskiNauka.Models.Dane", b =>
                {
                    b.HasOne("AngielskiNauka.Models.Poziom", "Poziom")
                        .WithMany("Danes")
                        .HasForeignKey("PoziomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Poziom");
                });

            modelBuilder.Entity("AngielskiNauka.Models.JobTime", b =>
                {
                    b.HasOne("AngielskiNauka.Models.Job", "Job")
                        .WithMany("TaskTimes")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("AngielskiNauka.Models.Stat", b =>
                {
                    b.HasOne("AngielskiNauka.Models.Poziom", "Poziom")
                        .WithMany("Stats")
                        .HasForeignKey("PoziomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Poziom");
                });

            modelBuilder.Entity("AngielskiNauka.Models.Job", b =>
                {
                    b.Navigation("TaskTimes");
                });

            modelBuilder.Entity("AngielskiNauka.Models.Poziom", b =>
                {
                    b.Navigation("Danes");

                    b.Navigation("Stats");
                });
#pragma warning restore 612, 618
        }
    }
}
