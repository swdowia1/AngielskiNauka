@page "{id:int?}"



@model IndexModel





@{



    ViewData["Title"] = "Home page";



    string ladowanie = "..ladowanie";



}



<style>



    .btn2 {
        width: 200px;
    }

    .swsw {
        font-family: SpaceGrotesk-Light;
        color: red;
        font-size: 140px;
        margin-bottom: 40px;
    }

    .timer-container {
        text-align: left;
        background: linear-gradient(to right, #ff7e5f, #feb47b);
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .time-fields {
        display: flex;
        align-items: center;
        margin-top: 20px;
    }

    .field {
        text-align: center;
        margin: 0 10px;
    }

        .field span {
            font-size: 48px;
            font-weight: bold;
            color: #333;
            display: block;
        }

        .field label {
            font-size: 14px;
            color: #777;
        }

    .separator {
        font-size: 48px;
        font-weight: bold;
        color: #333;
        margin-bottom: 20px;
    }

</style>




<h1> Poziom :@Model.poziomnazwa</h1>
<span style="color:brown;font-size:x-large" id="info"></span>

<h1><span id="ang">@ladowanie</span></h1>




<div class="container">
    <div class="row">
        <div class="col-3">
            <div class="vstack gap-3">



                <div>



                    <button onclick="answer(0)" class="btn2 btn btn-warning btn-block custom-btn-size">



                        <span id="pol0">@ladowanie</span>



                    </button>



                </div>



                <div>



                    <button onclick="answer(1)" class="btn2 btn btn-warning btn-block custom-btn-size">



                        <span id="pol1">@ladowanie</span>



                    </button>



                </div>



                <div>



                    <button onclick="answer(2)" class="btn2 btn btn-warning btn-block custom-btn-size">



                        <span id="pol2">@ladowanie</span>



                    </button>



                </div>



                <div>



                    <button onclick="answer(3)" class="btn2 btn btn-warning btn-block custom-btn-size">



                        <span id="pol3">@ladowanie</span>



                    </button>



                </div>








            </div>
        </div>


    </div>


</div>

<div id="stan"></div>
<br />
<table id="myTable" class="table table-striped">
    <thead>
        <tr>
            <th>Ang</th>
            <th>pol</th>
        </tr>
    </thead>
    <tbody id="tableBody">
    </tbody>

</table>

<hr />

<script>




    let intervalId; // Przechowuje ID interwału


    var aktualny = 0;

    var poziom = '@Model.poziom';
    LadujDane(poziom);

    var zle = 0;

    var dobrze = 0;
    var mnoznik = 0;


    var iloscall = 20;

    var slownik = null;
    var datazle = null;



    function wyslijodpowiedzi() {
        wait('Wysłamy odpowiedzi');

        clearInterval(intervalId); // Zatrzymuje interwał

   
        var index = 0
        for (index = 0; index < slownik.slowa.length; ++index) {
            var entry = slownik.slowa[index];
            if (entry.stan == 2) {

                $('#tableBody').append('<tr><td>' + entry.ang + '</td><td>' + entry.pol + '</td></tr>');
            }
        }



     
        postjson("api/ang", slownik, function (data) {


            infoapp('Towj wynik to '+dobrze*mnoznik)


            LadujDane(poziom)
            hideLoader()

        }, function (data) {

            console.log(data)
            hideLoader()

        })



    }



    function answer(id) {
        $("#tableBody").empty();
        if (aktualny >= iloscall) {

            infoapp('koniec wiecej nie ma')
            return
        }

        var slowo = slownik.slowa[aktualny];




        if (slowo.pol == slowo.odpowiedzi[id]) {

            dobrze = dobrze + 1
            slowo.stan = 1;
        }
        else {
            zle = zle + 1
            slowo.stan = 2;
        }

        aktualny = aktualny + 1

        if (aktualny >= iloscall) {
            infoapp('koniec testu')
            wyslijodpowiedzi()


        }
        else {
           

            showData(aktualny);
        }

    }


    function showData(pos) {

        var d = slownik.slowa[pos];
        $('#ang').text(d.ang);
        $('#pol0').text(d.odpowiedzi[0]);
        $('#pol1').text(d.odpowiedzi[1]);
        $('#pol2').text(d.odpowiedzi[2]);
        $('#pol3').text(d.odpowiedzi[3]);


    }
    function startTimer() {
        const minutesElement = document.getElementById('minutes');
        const secondsElement = document.getElementById('seconds');

        let totalSeconds = 0;

        function updateTimer() {
            const minutes = Math.floor(totalSeconds / 60).toString().padStart(2, '0');
            const seconds = (totalSeconds % 60).toString().padStart(2, '0');

            minutesElement.textContent = minutes;
            secondsElement.textContent = seconds;

            totalSeconds++;
        }

        intervalId = setInterval(updateTimer, 1000);
    }

    function infoapp(tekst) {

        $('#info').text(tekst)
    }
    function LadujDane(poziom) {
        aktualny = 0;
        console.log('aktualny', aktualny)
        var poziom = '@Model.poziom';


        zle = 0;


        dobrze = 0;
       




        getjson("api/ang/" + poziom, function (data) {

            console.log(data);
            iloscall = data.slowa.length;

            mnoznik = data.mnoznik;
            alert(data.mnoznik);



            slownik = data;

            showData(0)

        }, function (data) {









            console.log(data.message);





        })
    }


</script>