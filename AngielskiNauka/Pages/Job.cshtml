@page
@model AngielskiNauka.Pages.JobModel
@inject LocService ls
@{
    int lp = 1;

}
@{
}
<style>
    body {
        font-family: 'Arial', sans-serif;
        background-color: #f4f7fb;
        color: #333;
        margin: 0;
        padding: 0;
    }

    h2 {
        color: #333;
        font-size: 24px;
        text-align: center;
        margin-top: 20px;
    }

    form {
        display: flex;
        justify-content: center;
        margin-bottom: 20px;
    }

    input[type="text"] {
        padding: 10px;
        width: 70%;
        border-radius: 8px;
        border: 1px solid #ddd;
        font-size: 16px;
    }

    button {
        padding: 10px 15px;
        background-color: #4CAF50;
        border: none;
        color: white;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        margin-left: 10px;
    }

        button:hover {
            background-color: #45a049;
        }

    ul {
        list-style-type: none;
        padding: 0;
        margin: 20px 0;
    }

    li {
        background-color: white;
        padding: 15px;
        margin-bottom: 10px;
        border-radius: 8px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

        li span {
            font-size: 18px;
            color: #555;
        }

        li button {
            background-color: #f44336;
            margin-left: 10px;
        }

            li button:hover {
                background-color: #e41f1f;
            }

    .completed {
        text-decoration: line-through;
        color: #888;
    }

</style>
<h2>@ls.Get("tasks")</h2>


<input type="text" name="NewTaskText" placeholder="Enter task" required />
<button onclick="addTask()" type="submit">@ls.Get("taskadd")</button>




<table class="table table-hover">
    <thead>
        <tr>
            <th>@ls.Get("taskName")</th>
            <th>@ls.Get("time")</th>
            <th>@ls.Get("")</th>


        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Tasks)
        {
            <tr>


                <td>@item.Name</td>
                <td id="@($"tab{item.Id}")">@item.TimeJob</td>
                <td>
                    @if (item.Work == 0)
                    {
                        <svg width="50" height="50" viewBox="0 0 100 100" onclick="toggleStrokeColor(@item.Id)" style="cursor: pointer;">
                            <defs>
                                <filter id="shadow" x="-20%" y="-20%" width="140%" height="140%">
                                    <feDropShadow dx="2" dy="2" stdDeviation="2" flood-color="black" />
                                </filter>
                            </defs>
                            <polygon points="30,10 90,50 30,90" fill="none" stroke="black" stroke-width="2" filter="url(#shadow)"
                                     transform="scale(0.5)" />

                        </svg>
                    }
                    else
                    {
                        <svg width="50" height="50" viewBox="0 0 50 50" onclick="toggleStrokeColor(@item.Id)" xmlns="http://www.w3.org/2000/svg">
                            <rect x="10" y="5" width="12" height="40" fill="red" />
                            <rect x="28" y="5" width="12" height="40" fill="red" />
                        </svg>
                    }



                </td>
            </tr>

        }

    </tbody>
</table>
<script>
    var jobid='@Model.JobId';
    console.log(jobid);
    if (jobid > 0) {
        console.log("Job ID jest większe od 0");
        startTimer(@Model.TotalMinute, jobid); // Rozpo
    }
    function startTimer(seconds,tabId) {
        let counter = seconds*60;

        function updateTimer() {
            let hours = String(Math.floor(counter / 3600)).padStart(2, '0');
            let minutes = String(Math.floor((counter % 3600) / 60)).padStart(2, '0');
            let sec = String(counter % 60).padStart(2, '0');

            document.getElementById("tab" + tabId).textContent = `${hours}:${minutes}:${sec}`;
            counter++;
        }

        updateTimer();
        setInterval(updateTimer, 1000);
    }
    
    function toggleStrokeColor(event) {     
       

        postjson("api/zad/update", event, function (data) {

            window.location.reload();



        }, function (data) {

            console.log(data)

        })
    }
    function addTask() {
        var taskText = $('input[name="NewTaskText"]').val();

        postjson("api/zad/addtask", taskText, function (data) {

            window.location.reload();



        }, function (data) {

            console.log(data)

        })

    }



    // getjson("api/zad/jobs", function (data) {
    //     console.log(data);

    // }, function (data) {

    //     console.log(data.message);





    // })
</script>