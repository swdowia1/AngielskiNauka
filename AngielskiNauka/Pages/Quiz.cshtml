@page "{id:int?}"
@model AngielskiNauka.Pages.QuizModel

<style>


    .game-container {
        background: #fff;
        padding: 30px;
        border-radius: 20px;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        display: flex;
        gap: 40px;
        max-width: 800px;
        width: 100%;
    }

    .column {
        flex: 1;
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

    .word {
        padding: 12px;
        background-color: #e9f0ff;
        border-radius: 10px;
        text-align: center;
        cursor: pointer;
        transition: background 0.2s;
        user-select: none;
    }

        .word:hover {
            background-color: #cfe2ff;
        }

    .selected {
        background-color: #ffd966 !important;
    }

    .matched {
        background-color: #d4edda !important;
        cursor: default;
    }

    .wrong {
        background-color: #f8d7da !important;
    }

    h2 {
        text-align: center;
        width: 100%;
        margin-bottom: 20px;
    }
</style>
<div class="game-container">
    <div class="column" id="englishColumn"></div>
    <div class="column" id="polishColumn"></div>
</div>
<partial name="_Info" model="@Model.poziom" />
<script>
    const wordPairs = @Html.Raw(Json.Serialize(Model.wordPairs));

    let selectedEN = null;

    function shuffle(array) {
        return array.sort(() => Math.random() - 0.5);
    }

    function createGame() {
        const englishCol = document.getElementById("englishColumn");
        const polishCol = document.getElementById("polishColumn");

        englishCol.innerHTML = "";
        polishCol.innerHTML = "";

        const shuffledEN = shuffle([...wordPairs]);
        const shuffledPL = shuffle([...wordPairs]);

        shuffledEN.forEach(pair => {
            const div = document.createElement("div");
            div.className = "word";
            div.textContent = pair.en;
            div.dataset.word = pair.en;
            div.onclick = () => selectEnglish(div);
            englishCol.appendChild(div);
        });

        shuffledPL.forEach(pair => {
            const div = document.createElement("div");
            div.className = "word";
            div.textContent = pair.pl;
            div.dataset.match = pair.en;
            div.onclick = () => selectPolish(div);
            polishCol.appendChild(div);
        });
    }

    function selectEnglish(div) {
        if (div.classList.contains("matched")) return;

        document.querySelectorAll(".word").forEach(el => el.classList.remove("selected"));
        div.classList.add("selected");
        selectedEN = div;
    }

    function selectPolish(div) {
        if (!selectedEN || div.classList.contains("matched")) return;

        const enWord = selectedEN.dataset.word;
        const correctMatch = div.dataset.match;

        if (enWord === correctMatch) {
            selectedEN.classList.add("matched");
            div.classList.add("matched");
        } else {
            div.classList.add("wrong");
            setTimeout(() => {
                div.classList.remove("wrong");
            }, 800);
        }

        selectedEN.classList.remove("selected");
        selectedEN = null;
    }

    createGame();
</script>